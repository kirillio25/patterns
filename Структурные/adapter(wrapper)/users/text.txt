Ты разрабатываешь систему обработки данных о пользователях для социальной сети. У тебя есть старый класс, LegacyUser, который предоставляет информацию о пользователе, но в формате, который неудобен для использования с новыми модулями системы.

Новые модули работают с интерфейсом UserInterface, который включает методы getName(), getEmail() и getPhone(). Однако, LegacyUser имеет методы fetchFullName(), fetchEmailAddress() и fetchContactNumber(), которые возвращают данные в другом формате.

Тебе нужно реализовать класс-адаптер UserAdapter, который будет приводить LegacyUser к интерфейсу UserInterface. Это позволит использовать старый класс с новым кодом, не изменяя его.

Требования:
Создай интерфейс UserInterface с методами getName(), getEmail() и getPhone().
Создай класс LegacyUser, у которого есть методы:
fetchFullName() - возвращает полное имя пользователя.
fetchEmailAddress() - возвращает email.
fetchContactNumber() - возвращает номер телефона.
Реализуй адаптер UserAdapter, который принимает объект LegacyUser и предоставляет методы интерфейса UserInterface.
Проверь работу адаптера, создав экземпляр LegacyUser, обернув его в UserAdapter и вызвав методы getName(), getEmail() и getPhone().
Таким образом, адаптер поможет "подружить" старый код с новым интерфейсом без изменения самого класса LegacyUser.